{
  "openapi": "3.0.0",
  "info": {
    "title": "Documentation test.",
    "version": "1.0.0",
    "summary": "Values are inspired by the petstore example.",
    "description": "A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "name": "Swagger API Team",
      "email": "apiteam@swagger.io",
      "url": "http://swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/": {
      "get": {
        "description": "Returns all pets from the system that the user has access to\nNam sed condimentum est. Maecenas tempor sagittis sapien, nec rhoncus sem sagittis sit amet. Aenean at gravida augue, ac iaculis sem. Curabitur odio lorem, ornare eget elementum nec, cursus id lectus. Duis mi turpis, pulvinar ac eros ac, tincidunt varius justo. In hac habitasse platea dictumst. Integer at adipiscing ante, a sagittis ligula. Aenean pharetra tempor ante molestie imperdiet. Vivamus id aliquam diam. Cras quis velit non tortor eleifend sagittis. Praesent at enim pharetra urna volutpat venenatis eget eget mauris. In eleifend fermentum facilisis. Praesent enim enim, gravida ac sodales sed, placerat id erat. Suspendisse lacus dolor, consectetur non augue vel, vehicula interdum libero. Morbi euismod sagittis libero sed lacinia.\n\nSed tempus felis lobortis leo pulvinar rutrum. Nam mattis velit nisl, eu condimentum ligula luctus nec. Phasellus semper velit eget aliquet faucibus. In a mattis elit. Phasellus vel urna viverra, condimentum lorem id, rhoncus nibh. Ut pellentesque posuere elementum. Sed a varius odio. Morbi rhoncus ligula libero, vel eleifend nunc tristique vitae. Fusce et sem dui. Aenean nec scelerisque tortor. Fusce malesuada accumsan magna vel tempus. Quisque mollis felis eu dolor tristique, sit amet auctor felis gravida. Sed libero lorem, molestie sed nisl in, accumsan tempor nisi. Fusce sollicitudin massa ut lacinia mattis. Sed vel eleifend lorem. Pellentesque vitae felis pretium, pulvinar elit eu, euismod sapien.\n",
        "summary": "An optional, string summary, intended to apply to all operations in this path.",
        "operationId": "findValues",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "tags to filter by",
            "required": false,
            "style": "form",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "maximum number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "finds an object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object1"
                }
              }
            }
          }
        }
      }
    },
    "/other-endpoint": {
      "post": {
        "operationId": "non_root_client-set-mode",
        "summary": "Do something really cool.",
        "tags": [
          "non_root_client"
        ],
        "responses": {
          "default": {
            "description": "finds an object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Object1"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Object1": {
        "description": "A representation of the main object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Object2"
          },
          {
            "type": "object",
            "required": [
              "id"
            ],
            "properties": {
              "id": {
                "description": "The uuid in an UUIDv4 format",
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ]
      },
      "Object2": {
        "description": "A representation of the second Object type",
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "description": "The name of this object.",
            "type": "string"
          },
          "tag": {
            "description": "The tag of an Object2 object",
            "type": "string"
          }
        }
      },
      "Object3": {
        "description": "An Object to test the documentation of someOf extension methods and typdefs.",
        "oneOf": [
          {
            "description": "A strings for something",
            "type": "string"
          },
          {
            "description": "An integer for something",
            "type": "integer"
          }
        ]
      },
      "huntingSkill": {
        "description": "The measured skill for hunting",
        "type": "object",
        "enum": [
          "clueless",
          "lazy",
          "adventurous",
          "aggressive"
        ]
      },
      "Redirect": {
        "description": "Redirect for the Object2",
        "$ref": "#/components/schemas/Object2"
      }
    }
  },
  "tags": [
    {
      "name": "",
      "description": "the root client used for root requests."
    },
    {
      "name": "non_root_client",
      "description": "the non root client used for other requests."
    }
  ]
}
