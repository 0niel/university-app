plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android' version '2.1.20'
    id 'org.jetbrains.kotlin.plugin.serialization' version '2.1.20'
    id 'org.jetbrains.kotlin.plugin.compose' version '2.1.20'
    id 'dev.flutter.flutter-gradle-plugin'
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode') ?: '1'
def flutterVersionName = localProperties.getProperty('flutter.versionName') ?: '1.0'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace "ninja.mirea.mireaapp"
    compileSdk 35
    ndkVersion "27.0.12077973"

    defaultConfig {
        applicationId "ninja.mirea.mireaapp"
        minSdk 26
        targetSdk 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }
    
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    flavorDimensions "default"
    productFlavors {
        development {
            dimension "default"
            manifestPlaceholders = [appName: "Ninja Mirea [DEV]"]
        }
        production {
            dimension "default"
            manifestPlaceholders = [appName: "Ninja Mirea"]
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig keystoreProperties['storeFile']
                ? signingConfigs.release
                : signingConfigs.debug
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.4.8"
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lint {
        abortOnError false
    }
}

flutter {
    source '../..'
}

configurations.all {
    resolutionStrategy {
        force 'com.google.crypto.tink:tink-android:1.9.0'
        
        // Exclude the conflicting tink library
        eachDependency { details ->
            if (details.requested.group == 'com.google.crypto.tink' && details.requested.name == 'tink') {
                details.useTarget group: 'com.google.crypto.tink', name: 'tink-android', version: '1.9.0'
            }
        }
    }

    exclude group: 'com.google.crypto.tink', module: 'tink'
}

dependencies {
    // ==== DESUGARING & MULTIDEX ====
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.1.5"
    implementation "com.android.support:multidex:2.0.1"

    // ==== KOTLIN stdlib & SERIALIZATION ====
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.9.10"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.3"

    // ==== ANDROIDX SECURITY ====
    implementation "androidx.security:security-crypto:1.1.0-alpha07"

    // ==== CONSTRAINTLAYOUT ====
    implementation "androidx.constraintlayout:constraintlayout:2.2.1"

    // ==== WORKMANAGER ====
    implementation "androidx.work:work-runtime-ktx:2.10.4"
    implementation "androidx.work:work-runtime:2.10.0"

    // ==== JETPACK COMPOSE & TESTING ====
    implementation "androidx.compose.ui:ui:1.7.8"
    implementation "androidx.compose.ui:ui-tooling-preview:1.7.8"
    implementation "androidx.compose.material:material:1.7.8"
    implementation "androidx.compose.ui:ui-tooling:1.7.8"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.7.8"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.7.8"

    // ==== GLANCE APP WIDGET ====
    implementation "androidx.glance:glance:1.1.1"
    implementation "androidx.glance:glance-appwidget:1.1.1"

    // ==== PLAY SERVICES & ADS ====
    implementation "com.google.android.gms:play-services-location:21.3.0"
    implementation "com.yandex.android:mobileads:7.12.1"
    implementation "com.google.android.gms:play-services-ads:24.0.0"
}
