name: rtu_mirea_app
description: Mobile application for students of RTU MIREA
publish_to: 'none'

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
version: 1.3.8+34

environment:
  sdk: ">=3.1.1"

dependencies:
  flutter:
    sdk: flutter

  flutter_localizations:
    sdk: flutter

  # A wrapper around InheritedWidget to make them easier to use and more reusable.
  # See https://pub.dev/packages/provider
  provider: ^6.0.5

  # Contains code to deal with internationalized/localized messages, date and number formatting 
  # and parsing, bi-directional text, and other internationalization issues.
  # See https://pub.dev/packages/intl
  intl: ^0.18.0
  
  # Http client. 
  # See https://pub.dev/packages/dio
  dio: ^5.1.2

  # Simple no-sql local database. 
  # See https://pub.dev/packages/shared_preferences
  shared_preferences: ^2.0.11

  # State management library. 
  # See https://pub.dev/packages/bloc
  bloc: ^8.1.1

  # Widgets that make it easy to implement the BLoC. 
  # See https://pub.dev/packages/flutter_bloc
  flutter_bloc: ^8.1.2

  # SVG rendering widget for Flutter. 
  # See https://pub.dev/packages/flutter_svg
  flutter_svg: ^2.0.5

  # Helps to implement value based equality without explicitly 
  # override == and hashCode. 
  # See https://pub.dev/packages/equatable
  equatable: ^2.0.3

  # Simple direct Service Locator for Dependency Injection.
  # See https://pub.dev/packages/get_it
  get_it: ^7.2.0

  # Zoomable image content
  # See https://pub.dev/packages/photo_view
  photo_view: ^0.14.0

  # Animated floating search bar, also known as persistent search
  # See https://pub.dev/packages/material_floating_search_bar_2
  material_floating_search_bar_2: ^0.5.0

  # Flutter plugin for discovering the state of the network (WiFi & mobile/cellular) 
  # connectivity on Android and iOS.
  # See https://pub.dev/packages/connectivity_plus
  connectivity_plus: ^4.0.0

  # Functional Programming in Dart
  # See https://pub.dev/packages/dartz/versions/0.10.0-nullsafety.2
  dartz: ^0.10.0-nullsafety.2

  # A highly customizable autocomplete text input field for Flutter
  # See https://pub.dev/packages/flutter_typeahead
  flutter_typeahead: ^4.0.0

  # The Flutter Date Range Picker widget allows users to easily select 
  # dates or a range of dates. It has four built-in views that allow quick 
  # navigation to the desired date.
  # See https://pub.dev/packages/syncfusion_flutter_datepicker
  syncfusion_flutter_datepicker: ^22.2.12

  # A Flutter widget rendering static HTML and CSS as Flutter widgets.
  # See https://pub.dev/packages/flutter_html
  flutter_html: ^3.0.0-beta.2

  # Iframe widget for flutter_html
  # See https://pub.dev/packages/flutter_html_iframe
  flutter_html_iframe: ^3.0.0-beta.2

  # The Font Awesome Icon pack available as Flutter Icons. 
  # Provides 1600 additional icons to use in your apps.
  # See https://pub.dev/packages/font_awesome_flutter
  font_awesome_flutter: ^10.1.0

  # Table calendar for schedule
  # See https://pub.dev/packages/table_calendar
  table_calendar: ^3.0.3

  # Creates page that is dismissed by swipe gestures, with Hero style
  # animations, Inspired by Facebook, Instagram stories.
  # See https://pub.dev/packages/dismissible_page
  dismissible_page: ^1.0.2
  
  # Instagram stories like UI with rich animations and customizability.
  # See https://pub.dev/packages/story
  story: ^1.1.0

  # Official extension image, support placeholder(loading)/ failed state,
  # cache network, zoom/pan, photo view, slide out page,
  # editor(crop,rotate,flip), painting etc.
  extended_image: ^8.1.0

  # A package provides an easy way to add shimmer effect in Flutter project
  # See https://pub.dev/packages/shimmer
  shimmer: ^3.0.0

  # Load and cache network images with with placeholder and error widgets.
  # See https://pub.dev/packages/cached_network_image
  cached_network_image: ^3.2.0

  syncfusion_flutter_datagrid: ^22.2.12
  syncfusion_flutter_core: ^22.2.12
  syncfusion_flutter_sliders: ^22.2.12
  syncfusion_flutter_charts: ^22.2.12
  syncfusion_flutter_gauges: ^22.2.12

  url_launcher: ^6.0.17

  flutter_markdown: ^0.6.9
  
  carousel_slider: ^4.0.0

  salomon_bottom_bar: ^3.3.2

  # Get version name in runtime
  # https://pub.dev/packages/package_info_plus
  package_info_plus: ^4.1.0

  # Encapsulates the notion of the "current time". Very useful for testing
  # See https://pub.dev/packages/clock
  clock: ^1.1.0

  url_strategy: ^0.2.0
  
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  after_layout: ^1.1.0
  get:
  get_storage:

  # https://pub.dev/packages/home_widget
  home_widget: ^0.3.0
  
  freezed_annotation: ^2.1.0

  firebase_core: ^2.16.0
  firebase_core_web: ^2.5.0
  firebase_analytics: ^10.4.1
  firebase_messaging: ^14.6.8

  oauth2_client: ^3.2.2

  # Flutter Secure Storage provides API to store data in secure storage. 
  # See https://pub.dev/packages/flutter_secure_storage
  flutter_secure_storage: ^8.0.0

  # Flutter plugin providing detailed information about the device (make, model, etc.), 
  # and Android or iOS version the app is running on.
  # See https://pub.dev/packages/device_info_plus
  device_info_plus: ^9.0.0

  # Provide NFC functionality on Android, iOS & Web, including reading metadata, read & write 
  # NDEF records, and transceive layer 3 & 4 data with NFC tags / cards
  # See https://pub.dev/packages/flutter_nfc_kit
  flutter_nfc_kit: ^3.3.1
  
  # A Flutter plugin for opening iOS and Android phone settings from an app.
  # See https://pub.dev/packages/app_settings
  app_settings: ^5.0.0

  sentry_flutter: ^7.9.0
  sentry_dio: ^7.9.0
  sentry_logging: ^7.9.0
  logging: ^1.1.1

  sliver_tools: ^0.2.12

  # 1000+ beautiful icons to use in you dream project, with all the customization Flutter 
  # provides
  # See https://pub.dev/packages/unicons
  unicons: any
  go_router: ^10.1.2

  notifications_repository:
    path: packages/notifications_repository
  permission_client:
    path: packages/permission_client
  firebase_notifications_client:
    path: packages/notifications_client/firebase_notifications_client
  persistent_storage:
    path: packages/storage/persistent_storage


dev_dependencies:
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.1
  flutter_test:
    sdk: flutter
  flutter_launcher_icons: ^0.13.1
  build_runner:

  # https://pub.dev/packages/freezed
  freezed: ^2.1.0+1
  json_serializable:

flutter_icons:
  android: false
  ios: true
  image_path: "assets/icon.png"


# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/icons/
    - assets/map/
    - assets/json/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware.

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  fonts:
    - family: Montserrat
      fonts:
        - asset: assets/fonts/Montserrat/Montserrat-SemiBold.ttf
          weight: 600
    - family: Inter
      fonts:
        - asset: assets/fonts/Inter/Inter-Regular.ttf
          weight: 400
        - asset: assets/fonts/Inter/Inter-Medium.ttf
          weight: 500
        - asset: assets/fonts/Inter/Inter-SemiBold.ttf
          weight: 600
        - asset: assets/fonts/Inter/Inter-Bold.ttf
          weight: 700

  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
